{"version":3,"sources":["webpack:///webpack/bootstrap ccc70cd83f37624a4cde","webpack:///./target/scripts/ops.audio.js","webpack:///./target/scripts/app.js","webpack:///./target/scripts/ops.display.js","webpack:///./target/scripts/ops.display.2d.js","webpack:///./target/scripts/ops.display.2d.color.js","webpack:///./target/scripts/ops.display.2d.text.js","webpack:///./target/scripts/ops.controls.js","webpack:///./target/scripts/ops.levels.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;AC7DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;AACA,gBAAgB;AAChB,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,gBAAgB;AAChB,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB;AAChB,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;;;AC/SA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAwC;AACxC;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,mBAAmB;AACnB,KAAK,EAAE;AACP,UAAU;AACV,mBAAmB;AACnB,KAAK,EAAE;AACP,SAAS;AACT,mBAAmB;AACnB,KAAK,EAAE;AACP,SAAS;AACT,mBAAmB;AACnB,KAAK,EAAE;AACP,WAAW;AACX,mBAAmB;AACnB,KAAK,EAAE;AACP,WAAW;AACX,mBAAmB;AACnB,KAAK,EAAE;AACP,YAAY;AACZ,mBAAmB;AACnB,KAAK,EAAE;AACP,YAAY;AACZ,mBAAmB;AACnB,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO,qCAAqC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;;;;ACpYD;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA,uE;;;;;;;;;;;;;ACLA;;AAEA;;AAEA,OAAO,qBAAqB;AACc;AACpB;AACtB;AACA;AACA;;AAEA;AACA,QAAQ;AACR,QAAQ;AACR,SAAS;AACT,aAAa;AACb,SAAS;AACT,uBAAuB;AACvB,mBAAmB;AACnB,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX,WAAW;AACX,WAAW;AACX,UAAU;AACV,UAAU;AACV,WAAW;AACX,WAAW;AACX,aAAa;AACb,kBAAkB;AAClB,yBAAyB;AACzB,qBAAqB;AACrB,wBAAwB;;AAExB;AACA,oBAAoB;AACpB,eAAe;AACf,uCAAuC;;AAEvC;AACA,oCAAoC;AACpC,cAAc;AACd;;AAEA;AACA,cAAc;AACd,iBAAiB;AACjB,uCAAuC;;AAEvC;AACA;;AAEA;AACA,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iGAAkC,2BAA2B,mFAAmF,GAAG,mFAAmF,GAAG,wFAAwF,GAAG,wFAAwF,GAAG,wFAAwF,GAAG,gEAAgE,GAAG,wEAAwE,GAAG,qEAAqE,GAAG;AAChtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2GAA2G;AAC3G;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,aAAa;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,IAAI;AACf,WAAW,IAAI;AACf,WAAW,IAAI;AACf,WAAW,OAAO;AAClB,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,yBAAyB;AACpC;AACA;AACA,MAAM,oCAAoC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,wEAAwE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,IAAI;AACf,WAAW,IAAI;AACf;AACA;AACA,MAAM,wEAAwE;AAC9E;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,IAAI;AACf,WAAW,IAAI;AACf,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,WAAW,IAAI;AACf,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,UAAU;AACjB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,2FAA2F;AAC3F;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;ACxuBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAQ,4CAA4C;AACpD,QAAQ,4CAA4C;AACpD,QAAQ,4CAA4C;AACpD,QAAQ,uDAAuD;AAC/D,aAAa;AACb,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8BAA8B;AAC/C,kBAAkB,8BAA8B;AAChD,gBAAgB,8BAA8B;AAC9C,gBAAgB,8BAA8B;AAC9C,mBAAmB,8BAA8B;AACjD,qBAAqB,8BAA8B;AACnD,iBAAiB,8BAA8B;AAC/C,gBAAgB,uBAAuB;AACvC,iBAAiB,uBAAuB;AACxC,eAAe,uBAAuB;AACtC,eAAe,uBAAuB;AACtC,kBAAkB,uBAAuB;AACzC,oBAAoB,uBAAuB;AAC3C,gBAAgB;AAChB,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,WAAW;AACnB;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAwC,4BAA4B;AACpE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,qBAAqB;AAClC,QAAQ,sBAAsB;AAC9B,QAAQ,mBAAmB;AAC3B;AACA;AACA,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;;AAEA;AACA,YAAY,oBAAoB;AAChC,YAAY;AACZ,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,C;;;;;;;AC9JA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;;;ACZA;;AAEA;AACA;AACA;AACA;AACA,kBAAyB;AACzB;AACA;AACA;AACA;AACA,CAAC,GAAG;AACJ;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,CAAC,GAAG;AACJ;AACA;AACA;AACA,CAAC,GAAG;AACJ;AACA;AACA;AACA,CAAC,GAAG;AACJ;AACA;AACA;AACA,CAAC,GAAG;AACJ;AACA;AACA;AACA,CAAC,GAAG;AACJ;AACA;AACA,EAAE;AACF;AACA;AACA,CAAC,GAAG;AACJ;AACA;AACA,EAAE;AACF;AACA;AACA,CAAC,GAAG;AACJ;AACA;AACA,EAAE;AACF;AACA;AACA,CAAC,GAAG;AACJ;AACA;AACA,EAAE;AACF;AACA;AACA,CAAC;AAAA;AAAA;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qD;;;;;;;;;AC1EA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA,oBAA2B,mEAAmE;AAC9F,CAAC,mEAAmE,GAAG,qEAAqE,GAAG,uEAAuE,GAAG,mEAAmE;AAC5R,CAAC,qEAAqE,GAAG,oEAAoE,GAAG,oEAAoE,GAAG,mEAAmE;AAC1R,CAAC,oEAAoE,GAAG,qEAAqE,GAAG,oEAAoE,GAAG,mEAAmE;AAC1R,CAAC,mEAAmE,GAAG,oEAAoE,GAAG,uEAAuE,GAAG,qEAAqE,GAAG,uEAAuE,GAAG,6EAA6E;AACvb,CAAC,8EAA8E;AAC/E,CAAC,mFAAmF;AACpF,CAAC,oFAAoF;AACrF,CAAC,6EAA6E,GAAG,8EAA8E;AAC/J,CAAC,uEAAuE;AACxE,CAAC,yFAAyF;AAC1F,CAAC,oFAAoF;AACrF,CAAC,iFAAiF;AAClF,CAAC,2FAA2F;AAC5F,CAAC,gGAAgG,GAAG,kGAAkG;AAAA;AAAA;;AAEtM,mBAA0B,wGAAwG;AAClI,CAAC,wEAAwE,E","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ccc70cd83f37624a4cde","\"use strict\";\n// Fix up prefixing\n\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext;\nconst SILENT = 0.000001;\nvar ctx = new AudioContext();\nvar volume = 0.3;\nvar notes = {\n  \"C0\": 16.35,\n  \"C#0\": 17.32,\n  \"Db0\": 17.32,\n  \"D0\": 18.35,\n  \"D#0\": 19.45,\n  \"Eb0\": 19.45,\n  \"E0\": 20.60,\n  \"F0\": 21.83,\n  \"F#0\": 23.12,\n  \"Gb0\": 23.12,\n  \"G0\": 24.50,\n  \"G#0\": 25.96,\n  \"Ab0\": 25.96,\n  \"A0\": 27.50,\n  \"A#0\": 29.14,\n  \"Bb0\": 29.14,\n  \"B0\": 30.87,\n  \"C1\": 32.70,\n  \"C#1\": 34.65,\n  \"Db1\": 34.65,\n  \"D1\": 36.71,\n  \"D#1\": 38.89,\n  \"Eb1\": 38.89,\n  \"E1\": 41.20,\n  \"F1\": 43.65,\n  \"F#1\": 46.25,\n  \"Gb1\": 46.25,\n  \"G1\": 49.00,\n  \"G#1\": 51.91,\n  \"Ab1\": 51.91,\n  \"A1\": 55.00,\n  \"A#1\": 58.27,\n  \"Bb1\": 58.27,\n  \"B1\": 61.74,\n  \"C2\": 65.41,\n  \"C#2\": 69.30,\n  \"Db2\": 69.30,\n  \"D2\": 73.42,\n  \"D#2\": 77.78,\n  \"Eb2\": 77.78,\n  \"E2\": 82.41,\n  \"F2\": 87.31,\n  \"F#2\": 92.50,\n  \"Gb2\": 92.50,\n  \"G2\": 98.00,\n  \"G#2\": 103.83,\n  \"Ab2\": 103.83,\n  \"A2\": 110.00,\n  \"A#2\": 116.54,\n  \"Bb2\": 116.54,\n  \"B2\": 123.47,\n  \"C3\": 130.81,\n  \"C#3\": 138.59,\n  \"Db3\": 138.59,\n  \"D3\": 146.83,\n  \"D#3\": 155.56,\n  \"Eb3\": 155.56,\n  \"E3\": 164.81,\n  \"F3\": 174.61,\n  \"F#3\": 185.00,\n  \"Gb3\": 185.00,\n  \"G3\": 196.00,\n  \"G#3\": 207.65,\n  \"Ab3\": 207.65,\n  \"A3\": 220.00,\n  \"A#3\": 233.08,\n  \"Bb3\": 233.08,\n  \"B3\": 246.94,\n  \"C4\": 261.63,\n  \"C#4\": 277.18,\n  \"Db4\": 277.18,\n  \"D4\": 293.66,\n  \"D#4\": 311.13,\n  \"Eb4\": 311.13,\n  \"E4\": 329.63,\n  \"F4\": 349.23,\n  \"F#4\": 369.99,\n  \"Gb4\": 369.99,\n  \"G4\": 392.00,\n  \"G#4\": 415.30,\n  \"Ab4\": 415.30,\n  \"A4\": 440.00,\n  \"A#4\": 466.16,\n  \"Bb4\": 466.16,\n  \"B4\": 493.88,\n  \"C5\": 523.25,\n  \"C#5\": 554.37,\n  \"Db5\": 554.37,\n  \"D5\": 587.33,\n  \"D#5\": 622.25,\n  \"Eb5\": 622.25,\n  \"E5\": 659.26,\n  \"F5\": 698.46,\n  \"F#5\": 739.99,\n  \"Gb5\": 739.99,\n  \"G5\": 783.99,\n  \"G#5\": 830.61,\n  \"Ab5\": 830.61,\n  \"A5\": 880.00,\n  \"A#5\": 932.33,\n  \"Bb5\": 932.33,\n  \"B5\": 987.77,\n  \"C6\": 1046.50,\n  \"C#6\": 1108.73,\n  \"Db6\": 1108.73,\n  \"D6\": 1174.66,\n  \"D#6\": 1244.51,\n  \"Eb6\": 1244.51,\n  \"E6\": 1318.51,\n  \"F6\": 1396.91,\n  \"F#6\": 1479.98,\n  \"Gb6\": 1479.98,\n  \"G6\": 1567.98,\n  \"G#6\": 1661.22,\n  \"Ab6\": 1661.22,\n  \"A6\": 1760.00,\n  \"A#6\": 1864.66,\n  \"Bb6\": 1864.66,\n  \"B6\": 1975.53,\n  \"C7\": 2093.00,\n  \"C#7\": 2217.46,\n  \"Db7\": 2217.46,\n  \"D7\": 2349.32,\n  \"D#7\": 2489.02,\n  \"Eb7\": 2489.02,\n  \"E7\": 2637.02,\n  \"F7\": 2793.83,\n  \"F#7\": 2959.96,\n  \"Gb7\": 2959.96,\n  \"G7\": 3135.96,\n  \"G#7\": 3322.44,\n  \"Ab7\": 3322.44,\n  \"A7\": 3520.00,\n  \"A#7\": 3729.31,\n  \"Bb7\": 3729.31,\n  \"B7\": 3951.07,\n  \"C8\": 4186.01\n};\n\nfunction createNoise() {\n  var last = 0.0;\n  var bufferSize = 4096;\n  var noise = ctx.createScriptProcessor(bufferSize, 1, 1);\n  noise.onaudioprocess = function (e) {\n    var output = e.outputBuffer.getChannelData(0);\n    var i, n;\n    var white;\n    var scale = 32;\n    for (i = 0; i < bufferSize; i += scale) {\n      white = Math.random() * 2 - 1;\n      for (n = 0; n < scale; n++) output[i + n] = (last + 1.6 * white) / 2.6 * (1.0 + volume);\n      last = output[i];\n    }\n    scale *= 8;\n    for (i = 0; i < bufferSize; i += scale) {\n      white = Math.random() * 2 - 1;\n      for (n = 0; n < scale; n++) output[i + n] += white * 0.3;\n    }\n  };\n  return noise;\n}\n\nfunction startSound(o, g, time) {\n  o.start(0);\n  g.gain.value = volume;\n}\n\nfunction stopSound(o, g, time) {\n  g.gain.value = SILENT;\n  o.stop(0);\n}\n\nexport function playNote(note, type, start = 0, stop = 1) {\n  var o = ctx.createOscillator();\n  var g = ctx.createGain();\n  g.gain.value = SILENT;\n  g.gain.exponentialRampToValueAtTime(volume, ctx.currentTime + start);\n  o.connect(g);\n  g.connect(ctx.destination);\n\n  var frq = notes[note];\n  if (frq) {\n    o.type = type;\n    o.frequency.value = frq;\n    setTimeout(startSound.bind(null, o, g), start * 1000);\n    setTimeout(stopSound.bind(null, o, g), stop * 1000);\n  }\n}\n\nexport function playNoise(start, stop, fadeIn, fadeOut) {\n  if (start === undefined) start = 0;\n  if (stop === undefined) stop = 1;\n  var o = createNoise();\n  var g = ctx.createGain();\n  var currentTime = ctx.currentTime;\n  o.connect(g);\n  g.connect(ctx.destination);\n  g.gain.setValueAtTime(0, currentTime);\n  g.gain.linearRampToValueAtTime(volume, currentTime + fadeIn);\n  setTimeout(() => {\n    g.gain.linearRampToValueAtTime(0.0, currentTime + fadeOut);\n    setTimeout(() => o.disconnect(), fadeOut * 1000 + 100);\n  }, (fadeIn + (stop - fadeOut)) * 1000);\n}\n\nexport const sounds = {\n  plus: function () {\n    playNote(\"A4\", \"triangle\", 0, 0.05);\n    playNote(\"E5\", \"triangle\", 0.05, 0.1);\n  },\n  minus: function () {\n    playNote(\"E5\", \"triangle\", 0, 0.05);\n    playNote(\"A4\", \"triangle\", 0.05, 0.1);\n  },\n  lshift: function () {\n    playNote(\"E5\", \"triangle\", 0, 0.05);\n    playNote(\"E5\", \"triangle\", 0.07, 0.12);\n  },\n  rshift: function () {\n    playNote(\"A4\", \"triangle\", 0, 0.05);\n    playNote(\"A4\", \"triangle\", 0.07, 0.12);\n  },\n  bump: function () {\n    playNote(\"C3\", \"square\", 0, 0.1);\n  },\n  unbump: function () {\n    playNote(\"G2\", \"sawtooth\", 0, 0.1);\n    playNote(\"G2\", \"square\", 0, 0.1);\n  },\n  fill: function () {\n    playNoise(0.0, 0.6, 0.5, 0.6);\n    playNote(\"G2\", \"sawtooth\", 0.2, 0.32);\n    playNote(\"A5\", \"sine\", 0.2, 0.25);\n    playNote(\"E6\", \"sine\", 0.27, 0.32);\n  },\n  flush: function () {\n    playNoise(0.0, 0.6, 0.5, 0.6);\n    playNote(\"G2\", \"sawtooth\", 0.2, 0.32);\n    playNote(\"E6\", \"sine\", 0.2, 0.25);\n    playNote(\"A5\", \"sine\", 0.27, 0.32);\n  },\n\n  crash: function () {\n    playNoise(0.0, 1.8, 0.2, 1.6);\n  },\n  complete: function () {\n    var i = 0.1; // interval\n    var g = 0.01; // gap between notes\n    var t = 0; // time\n    playNote(\"C4\", \"square\", t, t + i);\n    playNote(\"C4\", \"square\", t + i + g, t + i * 2 + g * 2);\n    playNote(\"C3\", \"sawtooth\", t, t + i * 2 + g * 2);\n    t += i * 2 + g * 2;\n\n    playNote(\"E5\", \"square\", t, t + i);\n    playNote(\"F5\", \"square\", t + i + g, t + i * 3 + g * 2);\n    playNote(\"E4\", \"sawtooth\", t, t + i * 3 + g * 2);\n  },\n  glitch: function () {\n    playNoise(0.0, 1.36, 0.1, 1.35);\n    var i = 0.1; // interval\n    var g = 0.01; // gap between notes\n    var t = 0; // time\n    playNote(\"F3\", \"square\", t, t + i);\n    playNote(\"C4\", \"square\", t + i + g, t + i * 2 + g * 2);\n    playNote(\"E4\", \"sawtooth\", t, t + i * 2 + g * 2);\n    t += i * 2 + g * 2;\n\n    playNote(\"D#4\", \"square\", t, t + i);\n    playNote(\"C5\", \"square\", t + i + g, t + i * 3 + g * 2);\n    playNote(\"F5\", \"sawtooth\", t, t + i * 3 + g * 2);\n  },\n  endGame: function () {\n    var i = 0.1; // interval\n    var g = 0.01; // gap between notes\n    var t = 0; // time\n    playNote(\"C4\", \"square\", t, t + i);\n    playNote(\"C4\", \"square\", t + i + g, t + i * 2 + g * 2);\n    playNote(\"C3\", \"sawtooth\", t, t + i * 2 + g * 2);\n    t += i * 2 + g * 2;\n\n    playNote(\"E5\", \"square\", t, t + i);\n    playNote(\"F5\", \"square\", t + i + g, t + i * 3 + g * 2);\n    playNote(\"E4\", \"sawtooth\", t, t + i * 3 + g * 2);\n    t += i * 2 + g * 2;\n\n    playNote(\"C4\", \"square\", t, t + i);\n    playNote(\"C4\", \"square\", t + i + g, t + i * 2 + g * 2);\n    playNote(\"C3\", \"sawtooth\", t, t + i * 2 + g * 2);\n    t += i * 2 + g * 2;\n\n    playNote(\"E5\", \"square\", t, t + i);\n    playNote(\"F5\", \"square\", t + i + g, t + i * 3 + g * 2);\n    playNote(\"E4\", \"sawtooth\", t, t + i * 3 + g * 2);\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./target/scripts/ops.audio.js\n// module id = 0\n// module chunks = 0","\"use strict\";\n\nimport * as display from \"./ops.display\";\nimport * as controls from \"./ops.controls\";\nimport * as levels from \"./ops.levels\";\nimport * as audio from \"./ops.audio\";\nexport const ops = {\n\tdisplay: display,\n\tcontrols: controls,\n\tlevels: levels.levelData,\n\taudio: audio\n};\nwindow.ops = ops;\nwindow.addEventListener(\"load\", function () {\n\tconst MAX_OVER_PAR = 5;\n\tconst DEBUG = true;\n\tconst LEVEL_END_DELAY = 2000;\n\n\tvar state;\n\tvar levelsCleared = 0;\n\tvar glitchesCleared = 0;\n\tvar glitchesFound = 0;\n\tvar glitchIntervals = [3, 5, 8, 13, 21, 24, 55, 89, 144, 233];\n\tvar glitched = false;\n\tvar glitchExponentBase = 1.5;\n\tvar score = 0;\n\tvar paused = false;\n\tvar levelStarting = true;\n\tvar complete = false;\n\tvar gameOver = false;\n\tvar currentLevel = levels.levelData[0];currentLevel.name = 1;\n\tvar crashed = false;\n\tvar modKey = 0;\n\tvar lastOp = { code: false, id: \"\" };\n\tvar designMode = false;\n\n\t// finds the difference between the par score and the current score\n\tfunction parScoreDelta() {\n\t\treturn score - levelsCleared * 10;\n\t}\n\n\tfunction whichGlitch() {\n\t\treturn glitchIntervals[glitchesFound % glitchIntervals.length];\n\t}\n\n\t/**\n  * Creates a new level state from level data.\n  * @param {object} level data\n  * @param {string} name level name\n  * @return {object}\n  */\n\tfunction newState(level) {\n\t\tvar data = new Uint32Array(8);\n\t\tvar state = {\n\t\t\tdata: data,\n\t\t\tcurrentLevel: currentLevel\n\t\t};\n\t\tObject.defineProperties(state, {\n\t\t\tregister: { get: () => data[0], set: val => {\n\t\t\t\t\tval = val | 0;data[0] = val;\n\t\t\t\t} },\n\t\t\tflip: { get: () => data[1], set: val => {\n\t\t\t\t\tval = val | 0;data[1] = val;\n\t\t\t\t} },\n\t\t\tops: { get: () => data[2], set: val => {\n\t\t\t\t\tval = val | 0;data[2] = val;\n\t\t\t\t} },\n\t\t\tpar: { get: () => data[3], set: val => {\n\t\t\t\t\tval = val | 0;data[3] = val;\n\t\t\t\t} },\n\t\t\tlevel: { get: () => data[4], set: val => {\n\t\t\t\t\tval = val | 0;data[4] = val;\n\t\t\t\t} },\n\t\t\twidth: { get: () => data[5], set: val => {\n\t\t\t\t\tval = val | 0;data[5] = val;\n\t\t\t\t} },\n\t\t\theight: { get: () => data[6], set: val => {\n\t\t\t\t\tval = val | 0;data[6] = val;\n\t\t\t\t} },\n\t\t\ttarget: { get: () => data[7], set: val => {\n\t\t\t\t\tval = val | 0;data[7] = val;\n\t\t\t\t} }\n\t\t});\n\t\tcomplete = false;\n\t\tstate.register = level.register;\n\t\tstate.target = level.target;\n\t\tstate.flip = 0;\n\t\t// apply special blocks to target to save level design headaches\n\t\tif (level.holes) state.target ^= state.target & level.holes;\n\t\tif (level.burns) state.target |= level.burns;\n\t\tif (level.shorts) {\n\t\t\tif (state.target & 1) state.target |= currentLevel.shorts;else state.target ^= state.target & currentLevel.shorts;\n\t\t}\n\t\tstate.par = level.par;\n\t\tstate.name = level.name;\n\t\tstate.width = level.width;\n\t\tstate.height = level.height;\n\t\treturn state;\n\t}\n\n\tfunction pause() {\n\t\tpaused = true;\n\t}\n\n\tfunction unPause() {\n\t\tpaused = false;\n\t}\n\n\t// trims a value such that its bits all fit within the grid \n\tfunction trim(val, width, height) {\n\t\treturn val & Math.pow(2, width * height) - 1;\n\t}\n\n\tfunction trimStateFields() {\n\t\tstate.register = trim(state.register, currentLevel.width, currentLevel.height);\n\t\tstate.target = trim(state.target, currentLevel.width, currentLevel.height);\n\t\tstate.flip = trim(state.flip, currentLevel.width, currentLevel.height);\n\t}\n\n\tfunction applyFeatures() {\n\t\tif (currentLevel.holes !== undefined) state.register ^= state.register & currentLevel.holes;\n\t\tif (currentLevel.burns !== undefined) state.register |= currentLevel.burns;\n\t\tif (currentLevel.shorts !== undefined) {\n\t\t\tif (state.register & 1) state.register |= currentLevel.shorts;else state.register ^= state.register & currentLevel.shorts;\n\t\t}\n\t}\n\n\tfunction createGlitchLevel() {\n\t\tvar seed = parScoreDelta() + levelsCleared + glitchesCleared + whichGlitch();\n\t\tvar tmp = 0;\n\t\tvar width = Math.max(3, (seed & 5) + 1);\n\t\tvar height = Math.max(2, (seed & 5 ^ seed % 2) + 1);\n\n\t\tvar register = trim(state.register ^ seed | seed << 4 | (seed << 9) + seed, width, height);\n\t\tvar target = trim(state.target | seed ^ seed << 6 | (seed << 16) + seed, width, height);\n\t\tif (target == register) register &= 19029;\n\t\tif (target == register) register = 0; // just in case that's somehow the same!\n\t\tvar level = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tname: seed + 160,\n\t\t\ttarget: target,\n\t\t\tregister: register,\n\t\t\tpar: 0\n\t\t};\n\t\tlevel.par = level.target.toString(2).split(\"\").reduce((prev, cur) => {\n\t\t\treturn parseInt(prev + parseInt(cur));\n\t\t}, 0) * 2;\n\t\treturn level;\n\t}\n\n\tfunction setupLevel() {\n\t\tcrashed = false;\n\t\tmodKey = 0;\n\t\tunPause();\n\t\tstate = newState(currentLevel);\n\t\tlevelStarting = true;\n\t\tapplyFeatures();\n\t\tcontrols.revealKeys(currentLevel.revealed);\n\t\tlevelStarting = false;\n\t}\n\n\tfunction endGame() {\n\t\tstate.ops = 0;\n\t\tcurrentLevel.par = 0;\n\t\tcurrentLevel.name = \"END\";\n\t\tgameOver = true;\n\t\taudio.sounds.endGame();\n\t}\n\n\tfunction crash() {\n\t\taudio.sounds.crash();\n\t\tcrashed = true;\n\t\tpause();\n\t\tscore -= 3;\n\t\tsetTimeout(function () {\n\t\t\tcurrentLevel = levels.levelData[levelsCleared];\n\t\t\tcurrentLevel.name = levelsCleared + 1;\n\t\t\tglitched = false;\n\t\t\tsetupLevel();\n\t\t}, LEVEL_END_DELAY);\n\t}\n\n\tfunction completeLevel() {\n\t\tcomplete = true;\n\t\tif (glitched) {\n\t\t\tglitched = false;\n\t\t\tglitchesCleared++;\n\t\t} else {\n\t\t\tlevelsCleared++;\n\t\t\tscore += Math.max(0, 10 - (state.ops - state.par));\n\t\t}\n\t\tif (parScoreDelta() > whichGlitch()) {\n\t\t\tglitched = true;\n\t\t\tglitchesFound++;\n\t\t\taudio.sounds.glitch();\n\t\t} else {\n\t\t\tif (levels.levelData[levelsCleared] !== undefined) {\n\t\t\t\taudio.sounds.complete();\n\t\t\t} else {\n\t\t\t\treturn endGame();\n\t\t\t}\n\t\t}\n\t\tsetTimeout(function () {\n\t\t\tif (glitched) {\n\t\t\t\tcurrentLevel = createGlitchLevel();\n\t\t\t} else {\n\t\t\t\tcurrentLevel = levels.levelData[levelsCleared];\n\t\t\t\tcurrentLevel.name = levelsCleared + 1;\n\t\t\t}\n\t\t\tsetupLevel();\n\t\t}, LEVEL_END_DELAY);\n\t}\n\n\tfunction checkComplete() {\n\t\tif (designMode) return;\n\t\tif (state.register === state.target) {\n\t\t\tpause();\n\t\t\tsetTimeout(completeLevel, LEVEL_END_DELAY / 4);\n\t\t\treturn 1;\n\t\t} else if (state.ops >= state.par + MAX_OVER_PAR) {\n\t\t\tcrash();\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tfunction opCall(control) {\n\t\tif (paused) return;\n\t\tvar { code, id, op, mod, sound, modSound } = control;\n\t\tvar oldRegister = state.register;\n\t\tlastOp = control;\n\t\t// design mode needs updating\n\t\tstate.designMode = designMode;\n\t\tif (modKey) {\n\t\t\tmod(state);\n\t\t\tmodSound();\n\t\t\tlastOp.modded = true;\n\t\t} else {\n\t\t\top(state);\n\t\t\tsound();\n\t\t\tlastOp.modded = false;\n\t\t}\n\t\tstate.flip = state.register ^ oldRegister;\n\t\tapplyFeatures();\n\t\ttrimStateFields();\n\t\tstate.ops++;\n\t\tcheckComplete(); // check before incrementing\n\t\t// clear the flips now so they don't flicker\n\t\tstate.flip = state.register;\n\t\treturn false; // prevent bubbling for click events\n\t}\n\n\tfunction setMod(val) {\n\t\tmodKey = val;\n\t}\n\n\tfunction toggleDesignMode() {\n\t\tif (designMode === true) {\n\t\t\tdesignMode = false;\n\t\t\treturn;\n\t\t}\n\t\tdesignMode = true;\n\t\tsetupLevel();\n\t}\n\n\tfunction bindKeys() {\n\t\tvar btn;\n\t\twindow.addEventListener(\"keydown\", function (event) {\n\t\t\tif (event.keyCode === 16) setMod(1);\n\t\t\tif (controls.validKeys.indexOf(event.keyCode) !== -1) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbtn = controls.getControlByKeyCode(event.keyCode);\n\t\t\t\tbtn.active = true;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener(\"keyup\", function (event) {\n\t\t\tif (event.keyCode === 16) setMod(0);\n\t\t\tif (event.keyCode === 68) toggleDesignMode();\n\t\t\tif (controls.validKeys.indexOf(event.keyCode) !== -1) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbtn = controls.getControlByKeyCode(event.keyCode);\n\t\t\t\topCall(btn);\n\t\t\t\tbtn.active = false;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\n\tops.logoInfo = function () {\n\t\treturn {\n\t\t\tglitched: false,\n\t\t\tlevelsCleared: 0,\n\t\t\tglitchesCleared: 0,\n\t\t\tglitchesFound: 0,\n\t\t\tcurrentLevel: {\n\t\t\t\tpar: 5, width: 4, height: 4,\n\t\t\t\ttarget: 0b0100100000010010,\n\t\t\t\tholes: 0b0001000000001000,\n\t\t\t\tshorts: 0b0000000110000000,\n\t\t\t\tburns: 0b0010000000000100,\n\t\t\t\tregister: 0,\n\t\t\t\trevealed: 0\n\t\t\t},\n\t\t\tgameOver: 0,\n\t\t\tcrashed: 0,\n\t\t\tlevelStarting: 0,\n\t\t\tscore: 0,\n\t\t\tops: 0,\n\t\t\tregister: 0b1100100100010011,\n\t\t\tcomplete: 0,\n\t\t\tflip: 0,\n\t\t\tpaused: false,\n\t\t\tmodKey: false,\n\t\t\tlastOp: undefined,\n\t\t\tdesignMode: false\n\t\t};\n\t};\n\n\tops.stateInfo = function () {\n\t\treturn {\n\t\t\tglitched,\n\t\t\tlevelsCleared,\n\t\t\tglitchesCleared,\n\t\t\tglitchesFound,\n\t\t\tcurrentLevel,\n\t\t\tgameOver,\n\t\t\tcrashed,\n\t\t\tlevelStarting,\n\t\t\tscore,\n\t\t\tops: state.ops,\n\t\t\tregister: state.register,\n\t\t\tcomplete: complete,\n\t\t\tflip: state.flip,\n\t\t\tpaused: paused,\n\t\t\tmodKey: modKey,\n\t\t\tlastOp: lastOp,\n\t\t\tdesignMode: designMode\n\t\t};\n\t};\n\n\tif (DEBUG) {\n\t\tops.debug = function () {\n\t\t\treturn {\n\t\t\t\tstate: state,\n\t\t\t\tlevelsCleared: levelsCleared,\n\t\t\t\tglitchesCleared: glitchesCleared,\n\t\t\t\tglitched: glitched,\n\t\t\t\tglitchIntervals: glitchIntervals,\n\t\t\t\tscore: score,\n\t\t\t\tparDelta: parScoreDelta(),\n\t\t\t\tmodKey: modKey,\n\t\t\t\tcurrentLevel\n\t\t\t};\n\t\t};\n\n\t\tops.skip = function (level) {\n\t\t\tlevelsCleared = level - 1;\n\t\t\tcurrentLevel = levels.levelData[levelsCleared];\n\t\t\tcurrentLevel.name = level;\n\t\t\tscore = levelsCleared * 10;\n\t\t\tsetupLevel();\n\t\t};\n\n\t\tops.glitch = function (delta, lCleared, gCleared) {\n\t\t\tglitched = true;\n\t\t\tlevelsCleared = lCleared;\n\t\t\tglitchesCleared = gCleared;\n\t\t\tscore = levelsCleared * 10 + delta;\n\t\t\tcurrentLevel = levels.levelData[levelsCleared];\n\t\t\tcurrentLevel.name = levelsCleared + 1;\n\t\t\tsetupLevel();\n\t\t\tcurrentLevel = createGlitchLevel();\n\t\t\tsetupLevel();\n\t\t};\n\t}\n\n\tops.calcFinalScore = function () {\n\t\treturn score + Math.ceil(score * (Math.pow(glitchExponentBase, glitchesCleared) - 1));\n\t};\n\n\tops.startGame = function () {\n\t\tsetupLevel();\n\t\tbindKeys();\n\t};\n\tdisplay.init(ops);\n\tdisplay.setup();\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./target/scripts/app.js\n// module id = 1\n// module chunks = 0","\"use strict\";\n\nimport * as display from \"./ops.display.2d\";\nexport const init = display.init;\nexport const setup = display.setup;\nexport const render = display.render;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./target/scripts/ops.display.js\n// module id = 2\n// module chunks = 0","\"use strict\";\n\n// useful global constants\n\nconst { floor, random, max } = Math;\nimport { Color, Palette, GradientTexture } from \"./ops.display.2d.color\";\nimport { prerollText } from \"./ops.display.2d.text\";\nconst AUTO_FULLSCREEN = false;\nconst SCALE = 1;\nconst FPS = 60;\n\n// global variables\nvar pal; // color palette\nvar ops; // game data object\nvar info; // game info object\nvar controls; // game controls object\nvar body; // html document body\nvar fullscreen = false; // whether game is in fullscreen mode\nvar frameCount = 0; // running total of drawn frames\nvar animating = false; // whether game is currently running animation loop\nvar prerollStage = 0;\nvar prerollStep = -1;\nvar prerollLine = \"\";\nvar prerollLinePos = 1;\n\n// display state variables\nvar PX = 1; // pixel size\nvar LW = 4; // relative width of lines\nvar OR = 0; // orientation (0 = landscape, 1 = portrait)\nvar W = 0; // screen width\nvar H = 0; // screen height\nvar BW = 0; // draw buffer width\nvar BH = 0; // draw buffer height\nvar RAY = PX; // diameter of ray blip\nvar PAUSE = false; // whether game is paused\nvar GAME_STARTED = false; // whether game has started (otherwise display splash)\nvar TEXT_MODE = true; // preroll mode\nvar TEXT_FINAL_ROLL = 0; // final rolloff of preroll text\n\n// canvases\nvar compositeCanvas; // temporary draw buffer for compositing\nvar gameScreen; // game screen canvas\nvar interlaceBufferCanvases = Array(2); // canvases for alternating draw interlaceBufferContexts\n\n// patterns and gradients\nvar interlaceBufferMasks = Array(2); // draw buffer masks\nvar gradients; // GradientTexture object\nvar effectsTexture;\n\n// rendering contexts\nvar screenCtx; // current rendering context\nvar compositeCtx; // temporary context for compositing\nvar interlaceBufferContexts = Array(2); // draw buffer contexts\n\nvar startTime;\nvar gridData = {};\n\n/* bit types\nconst TYPE_R = 0; // register\nconst TYPE_T = 1; // target\nconst TYPE_H = 2; // hole\nconst TYPE_B = 3; // burn\nconst TYPE_S = 4; // short\nconst TYPE_G = 5; // gap\n*/\n\n//const FPS_INTERVAL = 1000/FPS;\n\nfunction evenNumber(n) {\n\treturn n >> 1 << 1;\n}\n\n// nearest power of two\nfunction npot(n) {\n\tvar x = 1;\n\tif (n === 1) return n;\n\tn--;\n\twhile (x < 16) {\n\t\tn |= n >> x;\n\t\tx <<= 1;\n\t}\n\tn++;\n\treturn n;\n}\n\nconst GRAD_HOLE = 0;\nconst GRAD_HOLE_FILL = 1;\nconst GRAD_BURN = 2;\nconst GRAD_BURN_FILL = 3;\nconst GRAD_SHORT = 4;\nconst GRAD_TARGET = 5;\nconst GRAD_REGISTER = 6;\nconst GRAD_COMPLETE = 7;\n\nfunction makeGradients() {\n\tgradients = new GradientTexture({ frames: FPS, gradients: [{ type: \"flicker\", speed: 1, colors: [pal.colorDim, pal.colorEmpty, pal.colorDark] }, { type: \"flicker\", speed: 1, colors: [pal.colorDark, pal.colorDim, pal.colorEmpty] }, { type: \"flicker\", speed: 1, colors: [pal.colorBright, pal.colorBlinding, pal.colorMid] }, { type: \"flicker\", speed: 1, colors: [pal.colorMid, pal.colorBright, pal.colorBlinding] }, { type: \"flicker\", speed: 1, colors: [pal.colorMid, pal.colorBright, pal.colorBlinding] }, { type: \"pulse\", speed: 1, colors: [pal.colorDim, pal.colorMid] }, { type: \"pulse\", speed: 1, colors: [pal.colorBright, pal.colorBlinding] }, { type: \"pulse\", speed: 3, colors: [pal.colorMid, pal.colorBlinding] }] });\n}\n\nfunction makeTextures() {\n\tvar maskCanvas,\n\t    maskCtx,\n\t    scanCanvas,\n\t    scanlinePattern,\n\t    scanTexCtx,\n\t    scanCtx,\n\t    i = 0;\n\tvar vingette, vingColors, color;\n\tvar maskStyles = [new Color(255, 255, 255, 0.01).asRGBA, new Color(255, 255, 255, 0.99).asRGBA];\n\tfor (i = 0; i < 2; ++i) {\n\t\tmaskCanvas = document.createElement(\"canvas\");\n\t\tmaskCanvas.width = 1;\n\t\tmaskCanvas.height = 2;\n\t\tmaskCtx = maskCanvas.getContext(\"2d\");\n\t\tmaskCtx.fillStyle = maskStyles[i];\n\t\tmaskCtx.fillRect(0, 0, 1, 1);\n\t\tmaskCtx.fillStyle = maskStyles[i == 1 ? 0 : 1];\n\t\tmaskCtx.fillRect(0, 1, 1, 1);\n\t\tinterlaceBufferMasks[i] = maskCtx.createPattern(maskCanvas, \"repeat\");\n\t}\n\tscanCanvas = document.createElement(\"canvas\");\n\tscanCanvas.width = 1;\n\tscanCanvas.height = LW;\n\teffectsTexture = document.createElement(\"canvas\");\n\teffectsTexture.width = W;\n\teffectsTexture.height = H;\n\tscanCtx = scanCanvas.getContext(\"2d\");\n\tscanTexCtx = effectsTexture.getContext(\"2d\");\n\t// vingette pattern\n\tvingette = scanTexCtx.createRadialGradient(W * 0.5, H * 0.5, (OR ? H : W) * 0.25, W * 0.5, H * 0.5, OR ? H : W);\n\tvingColors = [pal.colorBright.copy(), pal.colorDark.copy()];\n\tvingColors[0].a = 0.7;\n\tvingColors[1].a = 0.7;\n\tvingette.addColorStop(0, vingColors[0].asRGBA);\n\tvingette.addColorStop(1, vingColors[1].asRGBA);\n\tscanTexCtx.fillStyle = vingette;\n\tscanTexCtx.fillRect(0, 0, W, H);\n\n\t// scanline patterns\n\tcolor = pal.colorEmpty.copy();\n\tcolor.a = 0.5;\n\tscanCtx.fillStyle = color.asRGBA;\n\tscanCtx.fillRect(0, LW - 1, 1, 1);\n\tcolor.a = 0.125;\n\tscanCtx.fillStyle = color.asRGBA;\n\tscanCtx.fillRect(0, LW - 2, 1, 1);\n\tscanCtx.fillRect(0, 0, 1, 1);\n\tscanlinePattern = scanCtx.createPattern(scanCanvas, \"repeat\");\n\tscanTexCtx.fillStyle = scanlinePattern;\n\tscanTexCtx.fillRect(0, 0, W, H);\n}\n\nfunction setAliasing(ctx, state) {\n\tif (ctx.imageSmoothingEnabled !== undefined) {\n\t\tctx.imageSmoothingEnabled = state;\n\t\treturn;\n\t} else if (ctx.mozImageSmoothingEnabled !== undefined) {\n\t\tctx.mozImageSmoothingEnabled = state;\n\t} else if (ctx.webkitImageSmoothingEnabled !== undefined) {\n\t\tctx.webkitImageSmoothingEnabled = state;\n\t} else if (ctx.msImageSmoothingEnabled !== undefined) {\n\t\tctx.msImageSmoothingEnabled = state;\n\t}\n}\n\nfunction createBuffers() {\n\tfor (let i = 0; i < 2; ++i) {\n\t\tinterlaceBufferCanvases[i] = document.createElement(\"canvas\");\n\t\tinterlaceBufferCanvases[i].width = BW;\n\t\tinterlaceBufferCanvases[i].height = BH;\n\t\tinterlaceBufferContexts[i] = interlaceBufferCanvases[i].getContext(\"2d\");\n\t}\n\tcompositeCanvas = document.createElement(\"canvas\");\n\tcompositeCanvas.width = BW;\n\tcompositeCanvas.height = BH;\n\tcompositeCtx = compositeCanvas.getContext(\"2d\");\n}\n\n// from MDN\nfunction toggleFullScreen() {\n\tif (fullscreen) return;\n\tfullscreen = true;\n\tif (!document.fullscreenElement && // alternative standard method\n\t!document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement) {\n\t\t// current working methods\n\t\tif (document.documentElement.requestFullscreen) {\n\t\t\tdocument.documentElement.requestFullscreen();\n\t\t} else if (document.documentElement.msRequestFullscreen) {\n\t\t\tdocument.documentElement.msRequestFullscreen();\n\t\t} else if (document.documentElement.mozRequestFullScreen) {\n\t\t\tdocument.documentElement.mozRequestFullScreen();\n\t\t} else if (document.documentElement.webkitRequestFullscreen) {\n\t\t\tdocument.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n\t\t}\n\t} else {\n\t\tif (document.exitFullscreen) {\n\t\t\tdocument.exitFullscreen();\n\t\t} else if (document.msExitFullscreen) {\n\t\t\tdocument.msExitFullscreen();\n\t\t} else if (document.mozCancelFullScreen) {\n\t\t\tdocument.mozCancelFullScreen();\n\t\t} else if (document.webkitExitFullscreen) {\n\t\t\tdocument.webkitExitFullscreen();\n\t\t}\n\t}\n}\n\nfunction startGame() {\n\tGAME_STARTED = true;\n\tops.startGame();\n\tbody.removeEventListener(\"click\", startGame);\n\tbody.classList.remove(\"start\");\n\tif (AUTO_FULLSCREEN) toggleFullScreen();\n}\n\nfunction pressEnter(event) {\n\tif (event.keyCode === 13) {\n\t\tdocument.removeEventListener(\"keyup\", pressEnter);\n\t\tstartGame();\n\t}\n}\n\nfunction fullscreenOff(ev) {\n\tev.preventDefault();\n\tif (document.webkitIsFullScreen || document.mozIsFullScreen || document.msIsFullScreen) fullscreen = true;else fullscreen = false;\n\treturn false;\n}\n\nfunction updateRatio() {\n\tW = evenNumber(document.body.clientWidth);\n\tH = evenNumber(document.body.clientHeight);\n\tOR = W > H ? 0 : 1;\n\tPX = npot((OR ? W : H) / 240);\n\tW = W - W % PX;\n\tH = H - H % PX;\n\tgameScreen.width = W;\n\tgameScreen.height = H;\n\tBW = ~~(W / PX);\n\tBH = ~~(H / PX);\n\tRAY = PX * 2;\n\tmakeTextures();\n\tcreateBuffers();\n}\n\nfunction getBit(field, pos) {\n\treturn field >> pos & 1;\n}\n\nfunction calcOps() {\n\treturn (info.currentLevel.par - info.ops).toString();\n}\n\n/**\n * Draws the border around the game screen.\n */\nfunction drawBorder(ctx, w, h, yStart) {\n\tvar WMOD, HMOD;\n\tWMOD = w % 2;\n\tHMOD = h % 2;\n\tctx.strokeStyle = pal.stringMid;\n\tctx.lineWidth = LW;\n\tctx.strokeRect(LW, yStart + LW, w - LW * 2 - WMOD, yStart + h - LW * 2 - HMOD);\n}\n\n/**\n * Draw a triangle with corners at a, b, c, stroke color, and fill color.\n * @param {vertex} a 2d vertex for first corner\n * @param {vertex} b 2d vertex for second corner\n * @param {vertex} c 2d vertex for third corner\n * @param {color|false} stroke \n * @param {color|false} fill \n */\nfunction drawTriangle(ctx, a, b, c, fill) {\n\tctx.lineWidth = LW;\n\tctx.beginPath();\n\tctx.moveTo(a[0], a[1]);\n\tctx.lineTo(b[0], b[1]);\n\tctx.lineTo(c[0], c[1]);\n\tctx.fillStyle = fill;\n\tctx.fill();\n}\n\nconst drawButton = {\n\t\"opAdd\": function (ctx, cols, rows, size, fill) {\n\t\tvar half = size / 2,\n\t\t    x = cols[1],\n\t\t    y = rows[0],\n\t\t    a = [x + LW * half, y],\n\t\t    b = [x, y + LW * size],\n\t\t    c = [x + LW * size, y + LW * size];\n\t\tdrawTriangle(ctx, a, b, c, fill);\n\t},\n\t\"opSub\": function (ctx, cols, rows, size, fill) {\n\t\tvar half = size / 2,\n\t\t    x = cols[1],\n\t\t    y = rows[1],\n\t\t    a = [x, y],\n\t\t    b = [x + LW * half, y + LW * size],\n\t\t    c = [x + LW * size, y];\n\t\tdrawTriangle(ctx, a, b, c, fill);\n\t},\n\t\"opLShift\": function (ctx, cols, rows, size, fill) {\n\t\tvar half = size / 2,\n\t\t    x = cols[0],\n\t\t    y = rows[1],\n\t\t    a = [x, y + LW * half],\n\t\t    b = [x + LW * size, y + LW * size],\n\t\t    c = [x + LW * size, y];\n\t\tdrawTriangle(ctx, a, b, c, fill);\n\t},\n\t\"opRShift\": function (ctx, cols, rows, size, fill) {\n\t\tvar half = size / 2,\n\t\t    x = cols[2],\n\t\t    y = rows[1],\n\t\t    a = [x, y],\n\t\t    b = [x + LW * size, y + LW * half],\n\t\t    c = [x, y + LW * size];\n\t\tdrawTriangle(ctx, a, b, c, fill);\n\t},\n\t\"opBump\": function (ctx, cols, rows, size, fill) {\n\t\tvar x = cols[0],\n\t\t    y = rows[2],\n\t\t    w = LW * size * 3 + LW * 2,\n\t\t    h = LW * size / 2;\n\t\tctx.fillStyle = fill;\n\t\tctx.fillRect(x, y, w, h);\n\t}\n};\n\nfunction drawGlitches(ctx, w, h) {\n\tvar x,\n\t    y,\n\t    i = 0,\n\t    cleared = info.glitchesCleared;\n\tvar colorAt = gradients.getColorAtTime.bind(gradients);\n\tvar colors = [colorAt(GRAD_BURN, frameCount), colorAt(GRAD_HOLE, frameCount), colorAt(GRAD_REGISTER, frameCount), colorAt(GRAD_SHORT, frameCount)];\n\tvar colorLength = colors.length;\n\n\tfor (; i < cleared; ++i) {\n\t\tx = evenNumber(random() * w);\n\t\ty = evenNumber(random() * h);\n\t\tctx.fillStyle = colors[i % colorLength];\n\t\tctx.fillRect(x, y, LW, LW);\n\t}\n}\n\nfunction drawControls(ctx) {\n\tvar size = OR ? 6 : 5,\n\t    fill,\n\t    off = OR ? (BW + LW * size * 5) / 2 : BW,\n\t    cols = [off - LW * size * 4 - LW * 2, off - LW * size * 3 - LW, off - LW * size * 2],\n\t    rows = [BH - LW * size * 3 - LW * 3, BH - LW * size * 2 - LW * 2, BH - LW * size - LW];\n\tcontrols.buttons.forEach(btn => {\n\t\tif (btn.revealed && typeof drawButton[btn.id] !== \"undefined\") {\n\t\t\tfill = btn.active ? pal.stringBright : pal.stringMid;\n\t\t\tdrawButton[btn.id](ctx, cols, rows, size, fill);\n\t\t}\n\t});\n}\n\nfunction calcFPS() {\n\tvar now = Date.now();\n\treturn ((now - startTime) / frameCount).toPrecision(2);\n}\n\nfunction makeScoreboardText() {\n\tvar name = info.currentLevel.name;\n\treturn \"score:\" + info.score + \" level:\" + (info.glitched ? String.fromCharCode(name) : name) + \" ops:\" + calcOps() + \" FPS:\" + calcFPS();\n}\n\nfunction drawScoreboard(ctx) {\n\tvar text = makeScoreboardText(),\n\t    fontSize = 8;\n\tctx.font = fontSize + \"px 'Press Start 2P'\";\n\tctx.fillStyle = pal.stringMid;\n\tctx.textAlign = \"center\";\n\tctx.fillText(text, evenNumber(BW / 2), LW * 3 + fontSize);\n}\n\nfunction drawBitOutline(ctx, bit, xOff, yOff, bitSize, color) {\n\tctx.strokeStyle = color;\n\tctx.strokeRect(xOff - LW, yOff - LW, -bitSize + LW * 2, -bitSize + LW * 2);\n}\n\nfunction drawBitFill(ctx, bit, xOff, yOff, bitSize, color) {\n\tctx.strokeStyle = color;\n\tctx.strokeRect(xOff - LW * 2, yOff - LW * 2, -bitSize + LW * 4, -bitSize + LW * 4);\n}\n\n/**\n * Draws a single bit (cell).\n * @param {CanvasRenderingContext2D} ctx framebuffer being drawn to\n * @param {int} bit bit number\n * @param {int} xOff bit x offset (calculated in drawGrid)\n * @param {int} yOff bit y offset (calculated in drawGrid)\n * @param {string} borderStyle bit outer border color in RGBA format\n * @param {int} bit dimensions in pixels\n */\nfunction drawBit(ctx, bit, xOff, yOff, borderStyle, bitSize) {\n\tvar target = getBit(info.currentLevel.target, bit);\n\tvar burn = getBit(info.currentLevel.burns, bit);\n\tvar hole = getBit(info.currentLevel.holes, bit);\n\tvar shorted = getBit(info.currentLevel.shorts, bit);\n\tvar register = getBit(info.register, bit);\n\tvar outline = pal.stringEmpty;\n\tvar fill = pal.stringEmpty;\n\tvar colorAt = gradients.getColorAtTime.bind(gradients);\n\tvar glitchMod = 0;\n\n\tctx.lineWidth = LW;\n\tctx.strokeStyle = borderStyle;\n\t// handle glitch mode\n\tif (info.glitched && info.complete) {\n\t\tglitchMod = bit % 2 * 2 * (frameCount % (FPS / 4 + bit % 2 * 2) % 2 ? -1 : 1);\n\t\tctx.strokeStyle = colorAt(GRAD_BURN, frameCount);\n\t\tctx.fillStyle = colorAt(GRAD_BURN, frameCount);\n\t\tctx.fillRect(xOff + glitchMod, yOff + glitchMod, -bitSize + glitchMod, -bitSize + glitchMod);\n\t\tctx.strokeRect(xOff + glitchMod, yOff + glitchMod, -bitSize + glitchMod, -bitSize + glitchMod);\n\t} else {\n\t\tctx.strokeRect(xOff, yOff, -bitSize, -bitSize);\n\t\tif (register) fill = colorAt(GRAD_REGISTER, frameCount);\n\t\tif (hole) {\n\t\t\toutline = colorAt(GRAD_HOLE, frameCount);\n\t\t\tfill = colorAt(GRAD_HOLE_FILL, frameCount);\n\t\t} else if (burn) {\n\t\t\toutline = colorAt(GRAD_BURN, frameCount);\n\t\t\tfill = colorAt(GRAD_BURN_FILL, frameCount);\n\t\t} else if (shorted) {\n\t\t\toutline = colorAt(GRAD_SHORT, frameCount);\n\t\t\tif (register) fill = colorAt(GRAD_TARGET, frameCount);\n\t\t} else if (target) {\n\t\t\tif (info.complete) {\n\t\t\t\tlet color = colorAt(GRAD_COMPLETE, frameCount);\n\t\t\t\toutline = fill = color;\n\t\t\t} else outline = colorAt(GRAD_TARGET, frameCount);\n\t\t}\n\t\tif (outline !== pal.stringEmpty) drawBitOutline(ctx, bit, xOff, yOff, bitSize, outline);\n\t\tif (fill !== pal.stringEmpty) drawBitFill(ctx, bit, xOff, yOff, bitSize, fill);\n\t}\n}\n\n/**\n * Calculates grid dimensions for use in various draw operations\n */\nfunction calcGridData(w, h) {\n\tvar bitSize = LW * 5,\n\t    bitsX = info.currentLevel.width,\n\t    bitsY = info.currentLevel.height;\n\tgridData.bitSize = bitSize;\n\tgridData.bitsX = bitsX;\n\tgridData.bitsY = bitsY;\n\tgridData.numBits = bitsX * bitsY;\n\tgridData.gridOffsetX = evenNumber((w - bitsX * bitSize) / 2);\n\tgridData.gridOffsetY = evenNumber((h - bitsY * bitSize) / 2);\n\tgridData.gridMaxX = bitSize * bitsX;\n\tgridData.gridMaxY = bitSize * bitsY;\n}\n\n/**\n * Draws the \"PLAY/OPS\" logo screen text.\n * @param {CanvasRenderingContext2D} ctx framebuffer being drawn to\n */\nfunction drawTitleText(ctx, yStart) {\n\tvar { bitSize, gridOffsetX, gridOffsetY } = gridData;\n\t// need to calculate location of grid\n\tvar fontSize = 16;\n\tvar text = [\"P\", \"L\", \"A\", \"Y\"];\n\tvar time = frameCount % (FPS * 4);\n\tif (time < 31) text[3] = \"Y\";\n\tif (time > 30) text[0] = \"O\";\n\tif (time > 60) text[1] = \"P\";\n\tif (time > 90) text[2] = \"S\";\n\tif (time > 120) text[3] = \" \";\n\tif (time > 150) text[0] = \"P\";\n\tif (time > 180) text[1] = \"L\";\n\tif (time > 210) text[2] = \"A\";\n\tctx.fillStyle = pal.stringBright;\n\tctx.font = fontSize + \"px 'Press Start 2P'\";\n\tctx.textAlign = \"left\";\n\tctx.fillText(text[0], gridOffsetX + bitSize + LW - 1, yStart + gridOffsetY + bitSize * 2 - 1);\n\tctx.fillText(text[1], gridOffsetX + bitSize * 2 + LW - 1, yStart + gridOffsetY + bitSize * 2 - 1);\n\tctx.fillText(text[2], gridOffsetX + bitSize + LW - 1, yStart + gridOffsetY + bitSize * 3 - 1);\n\tctx.fillText(text[3], gridOffsetX + bitSize * 2 + LW - 1, yStart + gridOffsetY + bitSize * 3 - 1);\n}\n\nfunction drawGrid(ctx, yStart) {\n\tvar { bitSize, bitsX, numBits, gridOffsetX, gridOffsetY, gridMaxX, gridMaxY } = gridData;\n\tvar xOff = 0,\n\t    yOff = 0,\n\t    x = 0,\n\t    y = 0;\n\tvar border = pal.stringMid;\n\tvar colorAt = gradients.getColorAtTime.bind(gradients);\n\tif (info.crashed) {\n\t\tborder = colorAt(GRAD_COMPLETE, frameCount);\n\t\tctx.strokeStyle = border;\n\t\tctx.fillStyle = border;\n\t\tctx.lineWidth = LW;\n\t\tctx.strokeRect(gridOffsetX, yStart + gridOffsetY, gridMaxX, yStart + gridMaxY);\n\t\tctx.fillRect(gridOffsetX, yStart + gridOffsetY, gridMaxX, yStart + gridMaxY);\n\t} else {\n\t\tif (info.complete) border = colorAt(GRAD_COMPLETE, frameCount);\n\t\tfor (var i = 0; i < numBits; ++i) {\n\t\t\tx = i % bitsX;\n\t\t\ty = floor(i / bitsX);\n\t\t\txOff = gridOffsetX + gridMaxX - bitSize * x;\n\t\t\tyOff = yStart + gridOffsetY + gridMaxY - bitSize * y;\n\t\t\tdrawBit(ctx, i, xOff, yOff, border, bitSize, 0);\n\t\t}\n\t}\n}\n\n/**\n * Draws the title screen grid.\n * @param {CanvasRenderingContext2D} ctx framebuffer being drawn to\n * @param {int} w framebuffer width\n * @param {int} w framebuffer height\n */\nfunction drawTitleGrid(ctx, yStart) {\n\tvar { bitsX, numBits, bitSize, gridOffsetX, gridOffsetY, gridMaxX, gridMaxY } = gridData;\n\tvar xOff = 0,\n\t    yOff = 0,\n\t    x = 0,\n\t    y = 0;\n\tvar border = pal.stringMid;\n\tfor (var i = 0; i < numBits; ++i) {\n\t\tx = i % bitsX;\n\t\ty = floor(i / bitsX);\n\t\txOff = gridOffsetX + gridMaxX - bitSize * x;\n\t\tyOff = yStart + gridOffsetY + gridMaxY - bitSize * y;\n\t\tdrawBit(ctx, i, xOff, yOff, border, bitSize, 0);\n\t}\n}\n\n/**\n * Draws an image over a destination context using a given composition operation, \n * scaled to the size of the destination. \n * @param {CanvasRenderingContext2D} ctx framebuffer being drawn to\n * @param {Canvas} src source image\n * @param {String} operation operation type\n * @param {int} w width of framebuffer\n * @param {int} h height of framebuffer\n * @param {string} operation composite operation type (default source-over)\n */\nfunction composite(dest, src, w, h, operation = \"source-over\") {\n\tdest.globalCompositeOperation = operation;\n\tdest.drawImage(src, 0, 0, w, h);\n}\n\n/**\n * Fills a buffer with the given style.\n * @param CanvasRenderingContext2D ctx framebuffer being drawn to\n * @param {int} w width of framebuffer\n * @param {int} h height of framebuffer\n * @param {string} operation composite operation type (default source-over)\n */\nfunction drawFill(ctx, w, h, style, operation = \"source-over\") {\n\tctx.globalCompositeOperation = operation;\n\tctx.fillStyle = style;\n\tctx.fillRect(0, 0, w, h);\n}\n\n/**\n * Draws post-processing effects\n */\nfunction drawPostEffects(ctx, w, h) {\n\tcomposite(ctx, effectsTexture, w, h, \"overlay\");\n}\n\nfunction drawGameScreen(ctx, w, h, yStart) {\n\tcalcGridData(w, h);\n\tdrawFill(ctx, w, h, pal.stringWipe);\n\tdrawBorder(ctx, w, h, yStart);\n\tdrawScoreboard(ctx, w, h, yStart);\n\tdrawGrid(ctx, yStart);\n\tdrawControls(ctx, yStart);\n\tdrawGlitches(ctx, w, h, yStart);\n}\n\n/**\n * Draws the splash screen.\n * @param CanvasRenderingContext2D ctx framebuffer being drawn to\n * @param int w width of framebuffer\n * @param int h height of framebuffer\n */\nfunction drawTitleScreen(ctx, w, h, yStart) {\n\tcalcGridData(w, h);\n\tdrawFill(ctx, w, h, pal.stringWipe);\n\tdrawBorder(ctx, w, h, yStart);\n\tdrawTitleGrid(ctx, yStart);\n\tdrawTitleText(ctx, yStart);\n}\n\n/**\n * Draws the interlace mask.\n * @param CanvasRenderingContext2D ctx framebuffer being drawn to\n * @param int w width of framebuffer\n * @param int h height of framebuffer\n */\nfunction drawInterlaceMask(ctx, mask, w, h) {\n\tdrawFill(ctx, w, h, \"black\", \"source-over\");\n\tdrawFill(ctx, w, h, mask, \"source-in\");\n}\n\nfunction drawPrerollStage(ctx, text, pauseTime, startLine, scrollOff) {\n\tvar sub,\n\t    lineCount,\n\t    i = 0,\n\t    stop = prerollStep + startLine,\n\t    yStart = 0;\n\tlineCount = text.length - 1;\n\tif (scrollOff && stop > lineCount) yStart = -8 * (stop - lineCount);\n\tfor (; i < stop; ++i) {\n\t\tif (i >= lineCount) {\n\t\t\tprerollLine = text[lineCount];\n\t\t\tsub = prerollLine + \".\".repeat(stop - lineCount);\n\t\t\tctx.fillText(sub, LW, i * 8 + LW + LW * 2 + yStart);\n\t\t\tbreak;\n\t\t} else {\n\t\t\tprerollLine = text[i];\n\t\t\tif (i + 1 == stop) sub = prerollLine.substr(0, ~~(prerollLine.length / prerollLinePos));else sub = prerollLine;\n\t\t\tctx.fillText(sub, LW, i * 8 + LW + LW * 2 + yStart);\n\t\t}\n\t}\n\treturn lineCount + pauseTime;\n}\n\nfunction drawPrerollText(ctx, w, h) {\n\tvar fontSize = 8,\n\t    speed = 1,\n\t    lines = 0;\n\n\tdrawFill(ctx, w, h, pal.stringWipe);\n\tctx.font = fontSize + \"px 'Press Start 2P'\";\n\tctx.fillStyle = pal.stringMid;\n\n\tswitch (prerollStage) {\n\t\tcase 0:\n\t\t\tlines = drawPrerollStage(ctx, prerollText.post, FPS / 2, 0, false);\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tlines = drawPrerollStage(ctx, prerollText.memcheck, FPS / 3, prerollText.post.length, true);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tlines = drawPrerollStage(ctx, prerollText.startup, FPS / 3, 0, false);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tlines = drawPrerollStage(ctx, prerollText.errors, 0, prerollText.startup.length, false);\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tlines = drawPrerollStage(ctx, prerollText.overwrite, 0, prerollText.startup.length, false);\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\tlines = drawPrerollStage(ctx, prerollText.display, FPS / 2, 2, false);\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\tlines = drawPrerollStage(ctx, prerollText.dmi, FPS / 2, 2, true);\n\t\t\tTEXT_FINAL_ROLL = max(0, prerollStep - prerollText.dmi.length) * 8;\n\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tTEXT_MODE = 0;\n\t}\n\n\tif (prerollStep >= lines) {\n\t\tprerollStep = 0;\n\t\tprerollLinePos = 1;\n\t\tprerollStage++;\n\t\tprerollLinePos = 1;\n\t} else if (frameCount % speed === 0) {\n\t\tprerollStep++;\n\t\tprerollLinePos = speed - frameCount % speed;\n\t}\n}\n\nfunction animate() {\n\tvar curCtx, curCanvas;\n\tif (PAUSE) return;\n\tif (TEXT_MODE) {\n\t\tdrawPrerollText(compositeCtx, BW, BH, 0);\n\t}\n\tif (GAME_STARTED) {\n\t\tinfo = ops.stateInfo();\n\t\tdrawGameScreen(compositeCtx, BW, BH, 0);\n\t} else if (TEXT_FINAL_ROLL) {\n\t\tinfo = ops.logoInfo();\n\t\tdrawTitleScreen(compositeCtx, BW, BH, BH - TEXT_FINAL_ROLL);\n\t}\n\t//drawVingette(compositeCtx, BW, BH);\n\n\tvar which = ~~(frameCount % 2);\n\n\tcurCtx = interlaceBufferContexts[which];\n\tcurCanvas = interlaceBufferCanvases[which];\n\n\t// draw interlace mask (gets its own function for debugging/profiling)\n\tdrawInterlaceMask(curCtx, interlaceBufferMasks[which], BW, BH);\n\tcomposite(curCtx, compositeCanvas, BW, BH, \"source-in\");\n\n\tif (SCALE) {\n\t\tsetAliasing(screenCtx, false);\n\t\tcomposite(screenCtx, curCanvas, W, H);\n\t\tdrawPostEffects(screenCtx, W, H);\n\t\tsetAliasing(screenCtx, true);\n\t\tcomposite(screenCtx, curCanvas, W, H, \"overlay\");\n\t} else composite(screenCtx, curCanvas, (W - BW) / 2, (H - BH) / 2);\n\n\t// reset canvas styles\n\tscreenCtx.globalCompositeOperation = \"source-over\";\n\n\tframeCount++;\n\trequestAnimationFrame(animate);\n}\n\nexport function setup() {\n\tbody.innerHTML = \"\";\n\tbody.appendChild(gameScreen);\n\tstartTime = Date.now();\n\tif (!animating) requestAnimationFrame(animate);\n\tanimating = true;\n}\n\nexport function init(env) {\n\tops = env;\n\tcontrols = ops.controls;\n\tpal = new Palette(new Color(16, 128, 16));\n\tmakeGradients();\n\tbody = document.getElementsByTagName(\"body\")[0];\n\tbody.classList.add(\"2d\");\n\tgameScreen = document.createElement(\"canvas\");\n\tgameScreen.id = \"game-screen\";\n\tscreenCtx = gameScreen.getContext(\"2d\");\n\tbody.addEventListener(\"click\", startGame);\n\tdocument.addEventListener(\"keyup\", pressEnter);\n\twindow.addEventListener(\"resize\", updateRatio);\n\tupdateRatio();\n\tdrawFill(screenCtx, W, H, pal.stringEmpty);\n\tsetup();\n\tif (AUTO_FULLSCREEN) {\n\t\tbody.addEventListener(\"click\", toggleFullScreen);\n\t\tdocument.addEventListener(\"fullscreenchange\", fullscreenOff);\n\t\tdocument.addEventListener(\"mozfullscreenchange\", fullscreenOff);\n\t\tdocument.addEventListener(\"msfullscreenchange\", fullscreenOff);\n\t\tdocument.addEventListener(\"webkitfullscreenchange\", fullscreenOff);\n\t}\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./target/scripts/ops.display.2d.js\n// module id = 3\n// module chunks = 0","\"use strict\";\n\nexport function Color(r = 0, g = 0, b = 0, a = 1) {\n\tvar string = \"\";\n\tvar buf = new Uint8ClampedArray(4);\n\tfunction updateString() {\n\t\tstring = \"rgba(\" + buf[0] + \",\" + buf[1] + \",\" + buf[2] + \",\" + buf[3] / 255 + \")\";\n\t}\n\tfunction set(pos, val) {\n\t\tbuf[pos] = val;\n\t\tupdateString();\n\t}\n\n\tbuf.copy = function () {\n\t\treturn new Color(buf[0], buf[1], buf[2], buf[3]);\n\t};\n\n\tObject.defineProperties(buf, {\n\t\t\"r\": { set: set.bind(null, 0), get: () => buf[0] },\n\t\t\"g\": { set: set.bind(null, 1), get: () => buf[1] },\n\t\t\"b\": { set: set.bind(null, 2), get: () => buf[2] },\n\t\t\"a\": { set: val => set(3, ~~(val * 255)), get: () => buf[3] },\n\t\t\"asRGBA\": { get: () => string }\n\t});\n\tbuf.r = r;\n\tbuf.g = g;\n\tbuf.b = b;\n\tbuf.a = a;\n\treturn buf;\n}\n\nexport function Palette(source) {\n\tvar colors = new Array(6);\n\tcolors[0] = new Color(source.r * 0.05, source.g * 0.05, source.b * 0.05, 1.0);\n\tcolors[1] = new Color(source.r * 0.15, source.g * 0.15, source.b * 0.15, 0.7);\n\tcolors[2] = new Color(source.r * 0.33, source.g * 0.33, source.b * 0.33, 1.0);\n\tcolors[3] = new Color(source.r, source.g, source.b, 1.0);\n\tcolors[4] = new Color(source.r * 1.15, source.g * 1.15, source.b * 1.15, 1.0);\n\tcolors[5] = new Color(source.r * 2.0, source.g * 2.0, source.b * 2.0, 1.0);\n\tcolors[6] = new Color(source.r * 0.125, source.g * 0.125, source.b * 0.125, 0.25);\n\tObject.defineProperties(colors, {\n\t\t\"stringDark\": { get: () => colors[0].asRGBA },\n\t\t\"stringEmpty\": { get: () => colors[1].asRGBA },\n\t\t\"stringDim\": { get: () => colors[2].asRGBA },\n\t\t\"stringMid\": { get: () => colors[3].asRGBA },\n\t\t\"stringBright\": { get: () => colors[4].asRGBA },\n\t\t\"stringBlinding\": { get: () => colors[5].asRGBA },\n\t\t\"stringWipe\": { get: () => colors[6].asRGBA },\n\t\t\"colorDark\": { get: () => colors[0] },\n\t\t\"colorEmpty\": { get: () => colors[1] },\n\t\t\"colorDim\": { get: () => colors[2] },\n\t\t\"colorMid\": { get: () => colors[3] },\n\t\t\"colorBright\": { get: () => colors[4] },\n\t\t\"colorBlinding\": { get: () => colors[5] },\n\t\t\"colorWipe\": { get: () => colors[6] }\n\t});\n\treturn colors;\n}\n\nexport function repeatGrad(speed, timing, colorSet) {\n\tvar i = 1;\n\tvar rTiming = timing;\n\tvar rColorSet = colorSet;\n\tif (speed > 1) {\n\t\ttiming = timing.map(val => val / speed);\n\t\trTiming = timing.slice(0);\n\t\trColorSet = colorSet.slice(0);\n\t\tvar calcTime = val => val + timing[timing.length - 1] * i;\n\t\tfor (; i < speed; ++i) {\n\t\t\trTiming = rTiming.concat(timing.map(calcTime));\n\t\t\trColorSet = rColorSet.concat(colorSet);\n\t\t}\n\t}\n\treturn { timing: rTiming, colorSet: rColorSet };\n}\n\n// pulse and flicker effects\nconst gradientGenerators = {\n\tpulse: function (speed, a, b) {\n\t\tvar timing = [0, 1 / 2, 1];\n\t\tvar colorSet = [a, b, a];\n\t\treturn repeatGrad(speed, timing, colorSet);\n\t},\n\tflicker: function (speed, a, b, c) {\n\t\tvar timing = [0, 1 / 8, 1 / 7, 1 / 5, 1 / 3, 1];\n\t\tvar colorSet = [a, b, c, a, c, a];\n\t\treturn repeatGrad(speed, timing, colorSet);\n\t}\n};\n\nexport function GradientTexture(opts = { gradients: [], frames: 60 }) {\n\tvar canvas, ctx, gradStyles, data, strings;\n\tvar frames = opts.frames,\n\t    gradients = opts.gradients;\n\n\tthis.generate = function () {\n\t\tvar i,\n\t\t    n,\n\t\t    gradientsLength = gradients.length,\n\t\t    gradientStops,\n\t\t    style,\n\t\t    dataLength;\n\t\tgradStyles = [];\n\t\tcanvas = document.createElement(\"canvas\");\n\t\tcanvas.width = frames;\n\t\tcanvas.height = gradientsLength;\n\t\tctx = canvas.getContext(\"2d\");\n\t\tfor (i = 0; i < gradientsLength; ++i) {\n\t\t\tlet { type, colors, speed } = gradients[i];\n\t\t\tlet { timing, colorSet } = gradientGenerators[type].apply(null, [speed].concat(colors));\n\t\t\tstyle = ctx.createLinearGradient(0, 0, frames, 1);\n\t\t\tgradientStops = timing.length;\n\t\t\tfor (n = 0; n < gradientStops; n++) {\n\t\t\t\tstyle.addColorStop(timing[n], colorSet[n].asRGBA);\n\t\t\t}\n\t\t\tgradStyles.push(style);\n\t\t\tctx.fillStyle = style;\n\t\t\tctx.fillRect(0, i, frames, 1);\n\t\t}\n\t\tdata = ctx.getImageData(0, 0, frames, gradientsLength).data;\n\t\tdataLength = data.length;\n\t\tstrings = new Array(dataLength / 4);\n\t\t// now pregenerate color strings because stupid canvas is stupid\n\t\tfor (i = 0; i < dataLength; i += 4) {\n\t\t\tstrings[i / 4] = \"rgba(\" + data[i] + \",\" + data[i + 1] + \",\" + data[i + 2] + \",\" + data[i + 3] / 255 + \")\";\n\t\t}\n\t};\n\n\tObject.defineProperties(this, {\n\t\ttexture: { get: () => canvas },\n\t\tcontext: { get: () => ctx }\n\t});\n\n\tthis.addGradient = function (gradient) {\n\t\tgradients.push(gradient);\n\t\tthis.generate();\n\t};\n\n\tfunction colorAt(y, x) {\n\t\tvar offset = y * frames + x;\n\t\treturn strings[offset];\n\t}\n\n\tthis.getGradient = function (grad) {\n\t\treturn gradients[grad];\n\t};\n\n\tthis.getColorAtTime = function (grad, frameCount) {\n\t\treturn colorAt(grad, ~~(frameCount % frames));\n\t};\n\n\tthis.getColorAtPosition = function (grad, pos) {\n\t\treturn colorAt(grad, ~~(pos % frames));\n\t};\n\n\tthis.generate();\n\n\treturn this;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./target/scripts/ops.display.2d.color.js\n// module id = 4\n// module chunks = 0","\"use strict\";\n\nvar postText = [\"Computer Mainframe Operating System\", \"Version 1.3.3.7\", \"Copyright (C) 198X\", \"Seattle Computing\", \"Allied Microsystems Software, Inc.\", \"All wrongs reserved.\", \"--------------------------------------------\", \"CPU Architecture: 16-BIT\", \"Clock Speed: 23647HZ\", \"Memory: 64Kb OK\", \"MEMCHK16 BEGIN\"];\nvar startupText = [\"INITIALIZING M.OS MAINTENANCE MODE\", \"--------------------------------------------\", \"Running startup scripts\", \"Begin software authenticity check\", \"Computing CRC sums..........................\", \"............................................\", \"............................................\", \"............................................\", \"............................................\", \"............................................\", \".......................\"];\nexport const prerollText = {\n\tpost: postText,\n\tmemcheck: postText.concat([\"MEMORY ERROR AT SECTOR 0X00000000\", \"MEMORY ERROR AT SECTOR 0X00000001\", \"MEMORY ERROR AT SECTOR 0X00000003\", \"MEMORY ERROR AT SECTOR 0X00000007\", \"MEMORY ERROR AT SECTOR 0X0000000F\", \"MEMORY ERROR AT SECTOR 0X0000002C\", \"MEMORY ERROR AT SECTOR 0X0000004D\", \"MEMORY ERROR AT SECTOR 0X00000077\", \"MEMORY ERROR AT SECTOR 0X000001A1\", \"MEMORY ERROR AT SECTOR 0X0000026F\", \"MEMORY ERROR AT SECTOR 0X00000300\", \"MEMORY ERROR AT SECTOR 0X000007C3\", \"MEMORY ERROR AT SECTOR 0X00000F24\", \"MEMORY ERROR AT SECTOR 0X000010A1\", \"MEMORY ERROR AT SECTOR 0XDEADBEEF\", \"ERROR: MEMORY ERROR THRESHOLD EXCEEDED\", \"ENTERING M.OS MAINTENANCE MODE\"]),\n\tstartup: startupText,\n\terrors: startupText.slice(0, -1).concat([\"WARNING: UNAUTHORIZED BINARY AD4M.AI.......\"]),\n\toverwrite: startupText.slice(0, -1).concat([\"n0Th1Ng 2 C HeR3...........................\"]),\n\tdisplay: [\"INITIALIZING M.OS MAINTENANCE MODE\", \"--------------------------------------------\", \"Calibrating Display.........................\", \"............................................\", \"............................................\", \"............................................\", \"Display OK\"],\n\tdmi: [\"INITIALIZING M.OS MAINTENANCE MODE\", \"--------------------------------------------\", \"Starting DMI (Direct Memory Interface)......\", \"Simulation Mode enabled.....................\", \"............................................\", \"............................................\", \"............................................\", \"............................................\", \"............................................\", \"............................................\", \"............................................\", \"............................................\", \"............................................\", \"............................................\", \"............................................\", \"............................................\", \"............................................\", \"....................\"]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./target/scripts/ops.display.2d.text.js\n// module id = 5\n// module chunks = 0","\"use strict\";\n\nconst MAX_INT = Math.pow(2, 32) - 1;\nconst ops = window.ops;\nconst mod = false;\nimport * as audio from \"./ops.audio\";\nexport const buttons = [{ code: 38, id: \"opAdd\",\n\top: state => state.register++,\n\tmod: state => state.register |= Math.pow(2, state.width) - 1,\n\tsound: audio.sounds.plus, modSound: audio.sounds.fill,\n\tactive: false, revealed: false\n}, { code: 40, id: \"opSub\",\n\top: state => {\n\t\tif (state.register > 0) state.register--;\n\t},\n\tmod: state => state.register &= MAX_INT - (Math.pow(2, state.width) - 1),\n\tsound: audio.sounds.minus, modSound: audio.sounds.flush,\n\tactive: false, revealed: false\n}, { code: 37, id: \"opLShift\",\n\top: state => state.register <<= 1, mod: state => false,\n\tsound: audio.sounds.lshift, modSound: () => false,\n\tactive: false, revealed: false\n}, { code: 39, id: \"opRShift\",\n\top: state => state.register >>= 1, mod: state => false,\n\tsound: audio.sounds.rshift, modSound: () => false,\n\tactive: false, revealed: false\n}, { code: 32, id: \"opBump\",\n\top: state => state.register <<= state.width, mod: state => state.register >>= state.width,\n\tsound: audio.sounds.bump, modSound: audio.sounds.unbump,\n\tactive: false, revealed: false\n}, { code: 88, id: \"opFlip\",\n\top: state => state.register ^= MAX_INT, mod: state => state.register = 0,\n\tsound: () => false, modSound: () => false,\n\tactive: false, revealed: false\n}, { code: 104, id: \"opDesignTaller\",\n\top: state => {\n\t\tif (state.designMode) state.currentLevel.height++;\n\t}, mod: state => false,\n\tsound: () => false, modSound: () => false,\n\tactive: false, revealed: false\n}, { code: 98, id: \"opDesignShorter\",\n\top: state => {\n\t\tif (state.designMode && state.currentLevel.height > 1) state.currentLevel.height--;\n\t}, mod: state => false,\n\tsound: () => false, modSound: () => false,\n\tactive: false, revealed: false\n}, { code: 100, id: \"opDesignWider\",\n\top: state => {\n\t\tif (state.designMode) state.currentLevel.width++;\n\t}, mod: state => false,\n\tsound: () => false, modSound: () => false,\n\tactive: false, revealed: false\n}, { code: 102, id: \"opDesignNarrower\",\n\top: state => {\n\t\tif (state.designMode && state.currentLevel.width > 1) state.currentLevel.width--;\n\t}, mod: state => false,\n\tsound: () => false, modSound: () => false,\n\tactive: false, revealed: false\n}];\n\nexport function getControl(name) {\n\treturn buttons.filter(btn => btn.id == name)[0];\n}\n\nexport function getControlByKeyCode(code) {\n\treturn buttons.filter(btn => btn.code == code)[0];\n}\n\nexport function revealKeys(keys) {\n\tvar def = keys === undefined ? true : false;\n\tbuttons.forEach(btn => btn.revealed = def);\n\tif (keys !== undefined) buttons.filter(btn => keys.indexOf(btn.id) !== -1).forEach(btn => btn.revealed = true);\n}\n\nexport const validKeys = buttons.map(button => button.code);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./target/scripts/ops.controls.js\n// module id = 6\n// module chunks = 0","\"use strict\";\n\nconst ops = window.ops;\nconst U = [\"opAdd\"];\nconst D = [\"opSub\"];\nconst L = [\"opLShift\"];\nconst R = [\"opRShift\"];\nconst UL = [\"opAdd\", \"opLShift\"];\nconst DR = [\"opSub\", \"opRShift\"];\nconst LR = [\"opLShift\", \"opRShift\"];\nconst LRU = [\"opLShift\", \"opRShift\", \"opAdd\"];\nconst DLR = [\"opSub\", \"opLShift\", \"opRShift\"];\nconst UDL = [\"opAdd\", \"opSub\", \"opLShift\"];\nconst UDLR = [\"opAdd\", \"opSub\", \"opLShift\", \"opRShift\"];\nconst UDLRS = [\"opAdd\", \"opSub\", \"opLShift\", \"opRShift\", \"opBump\"];\nexport const conditions = {\n\tF_N: 1, // nightmare\n\tF_P: 2, // picture\n\tF_B: 4, // buffer\n\tF_W: 8, // wrap\n\tF_T: 16, // toggling targets\n\tG_P: 32, // parasitic glitch\n\tG_S: 64, // scrambled glitch\n\tG_I: 128, // invisible glitch mod boxes\n\tG_V: 256 // viral glitch\n};\nexport const levelData = [{ par: 8, width: 4, height: 1, target: 8, register: 0, revealed: U }, // add tuts\n{ par: 8, width: 2, height: 2, target: 8, register: 0, revealed: U }, { par: 11, width: 3, height: 3, target: 17, register: 6, revealed: U }, { par: 4, width: 4, height: 4, target: 128, register: 124, revealed: U }, { par: 3, width: 4, height: 1, target: 8, register: 1, revealed: L }, // lshift tuts\n{ par: 6, width: 3, height: 3, target: 128, register: 2, revealed: L }, { par: 1, width: 4, height: 1, target: 10, register: 5, revealed: L }, { par: 2, width: 3, height: 2, target: 36, register: 9, revealed: L }, { par: 3, width: 4, height: 1, target: 1, register: 8, revealed: R }, // rshift tuts\n{ par: 2, width: 2, height: 2, target: 3, register: 12, revealed: R }, { par: 7, width: 3, height: 3, target: 1, register: 128, revealed: R }, { par: 1, width: 4, height: 1, target: 5, register: 10, revealed: R }, { par: 3, width: 4, height: 1, target: 0, register: 3, revealed: D }, // sub tuts\n{ par: 6, width: 4, height: 1, target: 2, register: 8, revealed: D }, { par: 8, width: 3, height: 2, target: 8, register: 16, revealed: D }, { par: 6, width: 4, height: 2, target: 124, register: 130, revealed: D }, { par: 3, width: 4, height: 2, target: 34, register: 8, revealed: UL }, { par: 2, width: 4, height: 2, target: 96, register: 194, revealed: DR }, { par: 4, width: 4, height: 4, target: 32769, register: 32766, revealed: LRU }, // introvert \n{ par: 3, width: 4, height: 4, target: 27030, register: 59799, revealed: UDLR }, // all keys revealed\n{ par: 4, width: 5, height: 5, target: 33554431, register: 8388608, revealed: UDLR }, // fill me up!\n{ par: 8, width: 7, height: 4, target: 114139326, register: 1783427, revealed: UDLR }, // mr. hoppy\n{ par: 5, width: 4, height: 4, target: 1632, register: 61543, revealed: UDLR }, { par: 2, width: 4, height: 4, target: 3840, register: 61455, revealed: UDLRS }, // spacebar introduced\n{ par: 2, width: 4, height: 2, target: 153, register: 76, revealed: LR }, // lies!\n{ par: 38, width: 5, height: 6, target: 488293841, register: 1058588223, revealed: UDLRS }, // Cyclops!\n{ par: 9, width: 10, height: 3, target: 1006665696, register: 61440, revealed: UDLR }, // damn lies! \n{ par: 2, width: 3, height: 2, target: 4, register: 1, holes: 2, revealed: UDLRS }, // hole introduced\n{ par: 8, width: 4, height: 5, target: 266304, register: 64, holes: 50048, revealed: UDLRS }, // DESIGNER\n{ par: 6, width: 5, height: 5, target: 4194335, register: 28672, holes: 655360, revealed: UDLRS }, { par: 11, width: 3, height: 8, target: 1048580, register: 16416, holes: 9052947, revealed: UDLRS }];\n\nexport const disabled = [{ par: 50, width: 4, height: 4, target: 16, register: 1, holes: 2, burns: 4, shorts: 8, revealed: UDLRS }, // DESIGNER\n{ par: 50, width: 4, height: 2, target: 0, register: 0, revealed: UDLRS }];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./target/scripts/ops.levels.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}